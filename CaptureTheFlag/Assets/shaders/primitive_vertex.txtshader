/*
	This is the vertex shader used to render meshes
*/

#include "shaders.inc"

#if defined( EAE6320_PLATFORM_D3D )

void main(
	in const float3 i_vertexPosition_local : POSITION,
	in const float4 i_color : COLOR,
	out float4 gl_Position : SV_POSITION,
	out float4 o_color : COLOR
	)
#elif defined( EAE6320_PLATFORM_GL )

	layout( location = 0 ) in float3 i_vertexPosition_local;
	layout( location = 1 ) in float4 i_color;
	layout( location = 0 ) out float4 o_color;
void main()
#endif
{
	// Calculate the position of this vertex on screen
	{
		float4 vertexPosition_local = float4( i_vertexPosition_local, 1.0 );
		float4 vertexPosition_world = mul( vertexPosition_local, g_transform_localToWorld );
		float4 vertexPosition_camera = mul( vertexPosition_world, g_transform_worldToCamera );
		gl_Position = mul( vertexPosition_camera, g_transform_cameraToScreen );
	}
	// Pass the input color and the texture coordinates to the fragment shader unchanged
	{
		o_color = i_color;
	}
}